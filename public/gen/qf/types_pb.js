// @generated by protoc-gen-es v0.0.10 with parameter "target=js+dts"
// @generated from file qf/types.proto (package qf, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3} from "@bufbuild/protobuf";
import {BuildInfo, Score} from "../kit/score/score_pb.js";

/**
 * @generated from message qf.User
 */
export const User = proto3.makeMessageType(
  "qf.User",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "isAdmin", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "studentID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "avatarURL", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "login", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "updateToken", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "remoteIdentities", kind: "message", T: RemoteIdentity, repeated: true },
    { no: 10, name: "enrollments", kind: "message", T: Enrollment, repeated: true },
  ],
);

/**
 * @generated from message qf.Users
 */
export const Users = proto3.makeMessageType(
  "qf.Users",
  () => [
    { no: 1, name: "users", kind: "message", T: User, repeated: true },
  ],
);

/**
 * @generated from message qf.RemoteIdentity
 */
export const RemoteIdentity = proto3.makeMessageType(
  "qf.RemoteIdentity",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "remoteID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "accessToken", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "userID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message qf.Group
 */
export const Group = proto3.makeMessageType(
  "qf.Group",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "courseID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "teamID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "status", kind: "enum", T: proto3.getEnumType(Group_GroupStatus) },
    { no: 6, name: "users", kind: "message", T: User, repeated: true },
    { no: 7, name: "enrollments", kind: "message", T: Enrollment, repeated: true },
  ],
);

/**
 * @generated from enum qf.Group.GroupStatus
 */
export const Group_GroupStatus = proto3.makeEnum(
  "qf.Group.GroupStatus",
  [
    {no: 0, name: "PENDING"},
    {no: 1, name: "APPROVED"},
  ],
);

/**
 * @generated from message qf.Groups
 */
export const Groups = proto3.makeMessageType(
  "qf.Groups",
  () => [
    { no: 1, name: "groups", kind: "message", T: Group, repeated: true },
  ],
);

/**
 * @generated from message qf.Course
 */
export const Course = proto3.makeMessageType(
  "qf.Course",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "courseCreatorID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "year", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "organizationID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "organizationPath", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "slipDays", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 11, name: "dockerfile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "enrolled", kind: "enum", T: proto3.getEnumType(Enrollment_UserStatus) },
    { no: 13, name: "enrollments", kind: "message", T: Enrollment, repeated: true },
    { no: 14, name: "assignments", kind: "message", T: Assignment, repeated: true },
    { no: 15, name: "groups", kind: "message", T: Group, repeated: true },
  ],
);

/**
 * @generated from message qf.Courses
 */
export const Courses = proto3.makeMessageType(
  "qf.Courses",
  () => [
    { no: 1, name: "courses", kind: "message", T: Course, repeated: true },
  ],
);

/**
 * @generated from message qf.Repository
 */
export const Repository = proto3.makeMessageType(
  "qf.Repository",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "organizationID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "repositoryID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "userID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "groupID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "HTMLURL", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "repoType", kind: "enum", T: proto3.getEnumType(Repository_Type) },
    { no: 8, name: "issues", kind: "message", T: Issue, repeated: true },
  ],
);

/**
 * @generated from enum qf.Repository.Type
 */
export const Repository_Type = proto3.makeEnum(
  "qf.Repository.Type",
  [
    {no: 0, name: "NONE"},
    {no: 1, name: "INFO"},
    {no: 2, name: "ASSIGNMENTS"},
    {no: 3, name: "TESTS"},
    {no: 4, name: "USER"},
    {no: 5, name: "GROUP"},
  ],
);

/**
 * @generated from message qf.Enrollment
 */
export const Enrollment = proto3.makeMessageType(
  "qf.Enrollment",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "courseID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "userID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "groupID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "user", kind: "message", T: User },
    { no: 6, name: "course", kind: "message", T: Course },
    { no: 7, name: "group", kind: "message", T: Group },
    { no: 8, name: "status", kind: "enum", T: proto3.getEnumType(Enrollment_UserStatus) },
    { no: 9, name: "state", kind: "enum", T: proto3.getEnumType(Enrollment_DisplayState) },
    { no: 10, name: "slipDaysRemaining", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 11, name: "lastActivityDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "totalApproved", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "usedSlipDays", kind: "message", T: UsedSlipDays, repeated: true },
  ],
);

/**
 * @generated from enum qf.Enrollment.UserStatus
 */
export const Enrollment_UserStatus = proto3.makeEnum(
  "qf.Enrollment.UserStatus",
  [
    {no: 0, name: "NONE"},
    {no: 1, name: "PENDING"},
    {no: 2, name: "STUDENT"},
    {no: 3, name: "TEACHER"},
  ],
);

/**
 * @generated from enum qf.Enrollment.DisplayState
 */
export const Enrollment_DisplayState = proto3.makeEnum(
  "qf.Enrollment.DisplayState",
  [
    {no: 0, name: "UNSET"},
    {no: 1, name: "HIDDEN"},
    {no: 2, name: "VISIBLE"},
    {no: 3, name: "FAVORITE"},
  ],
);

/**
 * @generated from message qf.UsedSlipDays
 */
export const UsedSlipDays = proto3.makeMessageType(
  "qf.UsedSlipDays",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "enrollmentID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "assignmentID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "usedDays", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message qf.Enrollments
 */
export const Enrollments = proto3.makeMessageType(
  "qf.Enrollments",
  () => [
    { no: 1, name: "enrollments", kind: "message", T: Enrollment, repeated: true },
  ],
);

/**
 * @generated from message qf.Assignment
 */
export const Assignment = proto3.makeMessageType(
  "qf.Assignment",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "CourseID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "runScriptContent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "deadline", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "autoApprove", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "order", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "isGroupLab", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "scoreLimit", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 10, name: "reviewers", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 11, name: "containerTimeout", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "submissions", kind: "message", T: Submission, repeated: true },
    { no: 13, name: "tasks", kind: "message", T: Task, repeated: true },
    { no: 14, name: "gradingBenchmarks", kind: "message", T: GradingBenchmark, repeated: true },
  ],
);

/**
 * @generated from message qf.Task
 */
export const Task = proto3.makeMessageType(
  "qf.Task",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "assignmentID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "assignmentOrder", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "issues", kind: "message", T: Issue, repeated: true },
  ],
);

/**
 * @generated from message qf.Issue
 */
export const Issue = proto3.makeMessageType(
  "qf.Issue",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "repositoryID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "taskID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "issueNumber", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message qf.PullRequest
 */
export const PullRequest = proto3.makeMessageType(
  "qf.PullRequest",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "scmRepositoryID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "taskID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "issueID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "userID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "scmCommentID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "sourceBranch", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "number", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "stage", kind: "enum", T: proto3.getEnumType(PullRequest_Stage) },
  ],
);

/**
 * @generated from enum qf.PullRequest.Stage
 */
export const PullRequest_Stage = proto3.makeEnum(
  "qf.PullRequest.Stage",
  [
    {no: 0, name: "NONE"},
    {no: 1, name: "DRAFT"},
    {no: 2, name: "REVIEW"},
    {no: 3, name: "APPROVED"},
  ],
);

/**
 * @generated from message qf.Assignments
 */
export const Assignments = proto3.makeMessageType(
  "qf.Assignments",
  () => [
    { no: 1, name: "assignments", kind: "message", T: Assignment, repeated: true },
  ],
);

/**
 * @generated from message qf.Submission
 */
export const Submission = proto3.makeMessageType(
  "qf.Submission",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "AssignmentID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "userID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "groupID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "score", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "commitHash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "released", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "status", kind: "enum", T: proto3.getEnumType(Submission_Status) },
    { no: 9, name: "approvedDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "reviews", kind: "message", T: Review, repeated: true },
    { no: 11, name: "BuildInfo", kind: "message", T: BuildInfo },
    { no: 12, name: "Scores", kind: "message", T: Score, repeated: true },
  ],
);

/**
 * @generated from enum qf.Submission.Status
 */
export const Submission_Status = proto3.makeEnum(
  "qf.Submission.Status",
  [
    {no: 0, name: "NONE"},
    {no: 1, name: "APPROVED"},
    {no: 2, name: "REJECTED"},
    {no: 3, name: "REVISION"},
  ],
);

/**
 * @generated from message qf.Submissions
 */
export const Submissions = proto3.makeMessageType(
  "qf.Submissions",
  () => [
    { no: 1, name: "submissions", kind: "message", T: Submission, repeated: true },
  ],
);

/**
 * @generated from message qf.GradingBenchmark
 */
export const GradingBenchmark = proto3.makeMessageType(
  "qf.GradingBenchmark",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "CourseID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "AssignmentID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "ReviewID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "heading", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "criteria", kind: "message", T: GradingCriterion, repeated: true },
  ],
);

/**
 * @generated from message qf.Benchmarks
 */
export const Benchmarks = proto3.makeMessageType(
  "qf.Benchmarks",
  () => [
    { no: 1, name: "benchmarks", kind: "message", T: GradingBenchmark, repeated: true },
  ],
);

/**
 * @generated from message qf.GradingCriterion
 */
export const GradingCriterion = proto3.makeMessageType(
  "qf.GradingCriterion",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "BenchmarkID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "CourseID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "points", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "grade", kind: "enum", T: proto3.getEnumType(GradingCriterion_Grade) },
    { no: 7, name: "comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from enum qf.GradingCriterion.Grade
 */
export const GradingCriterion_Grade = proto3.makeEnum(
  "qf.GradingCriterion.Grade",
  [
    {no: 0, name: "NONE"},
    {no: 1, name: "FAILED"},
    {no: 2, name: "PASSED"},
  ],
);

/**
 * @generated from message qf.Review
 */
export const Review = proto3.makeMessageType(
  "qf.Review",
  () => [
    { no: 1, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "SubmissionID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "ReviewerID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "feedback", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "ready", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "score", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "gradingBenchmarks", kind: "message", T: GradingBenchmark, repeated: true },
    { no: 8, name: "edited", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message qf.SubmissionLink
 */
export const SubmissionLink = proto3.makeMessageType(
  "qf.SubmissionLink",
  () => [
    { no: 1, name: "assignment", kind: "message", T: Assignment },
    { no: 2, name: "submission", kind: "message", T: Submission },
  ],
);

/**
 * @generated from message qf.EnrollmentLink
 */
export const EnrollmentLink = proto3.makeMessageType(
  "qf.EnrollmentLink",
  () => [
    { no: 2, name: "enrollment", kind: "message", T: Enrollment },
    { no: 3, name: "submissions", kind: "message", T: SubmissionLink, repeated: true },
  ],
);

